{
    "version": "2.0.0",
    "tasks": [
         {
            "label": "üî® Fix Dependencies",
            "type": "shell",
            "command": [
                "rm -rf ~/.pub-cache",
                "; flutter pub cache repair",
                "; (pushd ___generators && (flutter clean && flutter pub get && popd))",
                "; (pushd _data && (flutter clean && flutter pub get && popd))",
                "; (pushd _service_interfaces && (flutter clean && flutter pub get && popd))",
                "; (pushd _services && (flutter clean && flutter pub get && popd))",
                "; (pushd _view && (flutter clean && flutter pub get && popd))",
                "; (pushd projects/admin_app && (flutter clean && flutter pub get && popd))",
                "; (pushd projects/operations_app && (flutter clean && flutter pub get && popd))",
                "; (pushd projects/public_app && (flutter clean && flutter pub get && popd))",
            ]
        },
        {
            "label": "‚ñ∂Ô∏è Run admin_app @ 8000 (TEST)",
            "type": "shell",
            "command": [
                "cd projects/admin_app",
                "&& flutter run -d chrome --web-port 8000 --dart-define=SERVICE_ENVIRONMENT=TEST"
            ]
        },
        {
            "label": "‚ñ∂Ô∏è Run public_app @ 8080 (TEST)",
            "type": "shell",
            "command": [
                "cd projects/public_app",
                "&& flutter run -d chrome --web-port 8080 --dart-define=SERVICE_ENVIRONMENT=TEST"
            ]
        },
        {
            "label": "‚ñ∂Ô∏è Run operations_app @ 8100 (TEST)",
            "type": "shell",
            "command": [
                "cd projects/operations_app",
                "&& flutter run -d chrome --web-port 8100 --dart-define=SERVICE_ENVIRONMENT=TEST"
            ]
        },
        {
            "label": "‚ñ∂Ô∏è Run admin_app @ 8000 (PROD)",
            "type": "shell",
            "command": [
                "cd projects/admin_app",
                "&& flutter run -d chrome --web-port 8000 --dart-define=SERVICE_ENVIRONMENT=PROD"
            ]
        },
        {
            "label": "‚ñ∂Ô∏è Run public_app @ 8080 (PROD)",
            "type": "shell",
            "command": [
                "cd projects/public_app",
                "&& flutter run -d chrome --web-port 8080 --dart-define=SERVICE_ENVIRONMENT=PROD"
            ]
        },
        {
            "label": "‚ñ∂Ô∏è Run operations_app @ 8100 (PROD)",
            "type": "shell",
            "command": [
                "cd projects/operations_app",
                "&& flutter run -d chrome --web-port 8100 --dart-define=SERVICE_ENVIRONMENT=PROD"
            ]
        },
        {
            "label": "üõ†Ô∏è Build admin_app (WASM)",
            "type": "shell",
            "command": [
                "cd projects/admin_app",
                "&& flutter build web --wasm"
            ]
        },
        {
            "label": "üõ†Ô∏è Build public_app (WASM)",
            "type": "shell",
            "command": [
                "cd projects/public_app",
                "&& flutter build web --wasm"
            ]
        },
        {
            "label": "üõ†Ô∏è Build operations_app (WASM)",
            "type": "shell",
            "command": [
                "cd projects/operations_app",
                "&& flutter build web --wasm"
            ]
        },
        {
            "label": "üåê Deploy admin_app (Test) using MacOS",
            "type": "shell",
            "command": [
                "rm -rf projects/admin_app/build",
                "&& rm -rf projects/firebase/hosting/admin_app/build/web",
                "&& (cd projects/admin_app && flutter build web --wasm)",
                "&& mkdir -p projects/firebase/hosting/admin_app/build",
                "&& (cd projects/firebase/hosting/admin_app/build && ln -s ../../../../admin_app/build/web web)",
                "&& . ~/.nvm/nvm.sh && nvm use 21",
                "&& (cd projects/firebase && firebase deploy --only hosting:admin_app --project test)",
            ]
        },
        {
            "label": "üåê Deploy public_app (Test) using MacOS",
            "type": "shell",
            "command": [
                "rm -rf projects/public_app/build",
                "&& rm -rf projects/firebase/hosting/public_app/build/web",
                "&& (cd projects/public_app && flutter build web --wasm)",
                "&& mkdir -p projects/firebase/hosting/public_app/build",
                "&& (cd projects/firebase/hosting/public_app/build && ln -s ../../../../public_app/build/web web)",
                "&& . ~/.nvm/nvm.sh && nvm use 21",
                "&& (cd projects/firebase && firebase deploy --only hosting:public_app --project test)",
            ]
        },
        {
            "label": "üåê Deploy operations_app (Test) using MacOS",
            "type": "shell",
            "command": [
                "rm -rf projects/operations_app/build",
                "&& rm -rf projects/firebase/hosting/operations_app/build/web",
                "&& (cd projects/operations_app && flutter build web --wasm)",
                "&& mkdir -p projects/firebase/hosting/operations_app/build",
                "&& (cd projects/firebase/hosting/operations_app/build && ln -s ../../../../operations_app/build/web web)",
                "&& . ~/.nvm/nvm.sh && nvm use 21",
                "&& (cd projects/firebase && firebase deploy --only hosting:operations_app --project test)",
            ]
        },
        {
            "label": "‚öôÔ∏è Generate Directives",
            "type": "shell",
            "command": "cd ___generators/src; dart generate_directives.dart"
        },
        {
            "label": "‚öôÔ∏è Generate Exports",
            "type": "shell",
            "command": "cd ___generators/src; dart generate_exports.dart"
        },
        {
            "label": "‚öôÔ∏è Generate License Headers",
            "type": "shell",
            "command": "cd ___generators/src; dart generate_license_headers.dart"
        },
        {
            "label": "‚öôÔ∏è Generate Makeups",
            "type": "shell",
            "command": "cd ___generators/src; dart generate_makeups.dart"
        },
        {
            "label": "‚öôÔ∏è Generate Models",
            "type": "shell",
            "command": "cd ___generators/src; dart generate_models.dart"
        },
        {
            "label": "‚öôÔ∏è Generate Preps",
            "type": "shell",
            "command": "cd ___generators/src; dart generate_preps.dart"
        },
        {
            "label": "‚öôÔ∏è Generate Screen",
            "type": "shell",
            "command": "cd ___generators/src; dart generate_screen.dart"
        },
        {
            "label": "‚öôÔ∏è Generate Screen Access",
            "type": "shell",
            "command": "cd ___generators/src; dart generate_screen_access.dart"
        },
        {
            "label": "‚öôÔ∏è Generate Screen Bindings",
            "type": "shell",
            "command": "cd ___generators/src; dart generate_screen_bindings.dart"
        },
        {
            "label": "‚öôÔ∏è Generate Type Utils",
            "type": "shell",
            "command": "cd ___generators/src; dart generate_type_utils.dart"
        },
        {
            "label": "‚öôÔ∏è Generate TypeScript Models",
            "type": "shell",
            "command": "cd ___generators/src; dart generate_typescript_models.dart"
        },
        {
            "label": "üîÑ Sync foundation",
            "type": "shell",
            "command": [
                "git init",
                "; git add .",
                "; git commit -m 'Upstream'",
                "; git remote remove upstream",
                "; git remote add upstream https://github.com/robmllze/foundation.git",
                "; git fetch upstream",
                "; git merge upstream/main --allow-unrelated-histories --no-edit",
                "; find . -type d -empty -delete",
                "; rm -f .gitmodules"
            ],
            "options": {
                "cwd": "${workspaceFolder}"
            }
        },
        {
            "label": "üîÑ Sync /___generators",
            "type": "shell",
            "command": [
                "git init",
                "; git add .",
                "; git commit -m 'Upstream'",
                "; git remote remove upstream",
                "; git remote add upstream https://github.com/robmllze/___generators.git",
                "; git fetch upstream",
                "; git merge upstream/main --allow-unrelated-histories --no-edit"
            ],
            "options": {
                "cwd": "${workspaceFolder}/___generators"
            }
        },
        {
            "label": "üîÑ Sync /_data",
            "type": "shell",
            "command": [
                "git init",
                "; git add .",
                "; git commit -m 'Upstream'",
                "; git remote remove upstream",
                "; git remote add upstream https://github.com/robmllze/_data-foundation.git",
                "; git fetch upstream",
                "; git merge upstream/main --allow-unrelated-histories --no-edit"
            ],
            "options": {
                "cwd": "${workspaceFolder}/_data"
            }
        },
        {
            "label": "üîÑ Sync /_service_interfaces",
            "type": "shell",
            "command": [
                "git init",
                "; git add .",
                "; git commit -m 'Upstream'",
                "; git remote remove upstream",
                "; git remote add upstream https://github.com/robmllze/_service_interfaces-foundation.git",
                "; git fetch upstream",
                "; git merge upstream/main --allow-unrelated-histories --no-edit"
            ],
            "options": {
                "cwd": "${workspaceFolder}/_service_interfaces"
            }
        }, 
        {
            "label": "üîÑ Sync /_services (main)",
            "type": "shell",
            "command": [
                "git init",
                "; git add .",
                "; git commit -m 'Upstream'",
                "; git remote remove upstream",
                "; git remote add upstream https://github.com/robmllze/_services-foundation.git",
                "; git fetch upstream",
                "; git merge upstream/main --allow-unrelated-histories --no-edit"
            ],
            "options": {
                "cwd": "${workspaceFolder}/_services"
            }
        },
        {
            "label": "üîÑ Sync /_services (with_firebase)",
            "type": "shell",
            "command": [
                "git init",
                "; git add .",
                "; git commit -m 'Upstream'",
                "; git remote remove upstream",
                "; git remote add upstream https://github.com/robmllze/_services-foundation.git",
                "; git fetch upstream",
                "; git merge upstream/with_firebase --allow-unrelated-histories --no-edit"
            ],
            "options": {
                "cwd": "${workspaceFolder}/_services"
            }
        },
       {
            "label": "üîÑ Sync /_services (with_local)",
            "type": "shell",
            "command": [
                "git init",
                "; git add .",
                "; git commit -m 'Upstream'",
                "; git remote remove upstream",
                "; git remote add upstream https://github.com/robmllze/_services-foundation.git",
                "; git fetch upstream",
                "; git merge upstream/with_local --allow-unrelated-histories --no-edit"
            ],
            "options": {
                "cwd": "${workspaceFolder}/_services"
            }
        },
        {
            "label": "üîÑ Sync /_view",
            "type": "shell",
            "command": [
                "git init",
                "; git add .",
                "; git commit -m 'Upstream'",
                "; git remote remove upstream",
                "; git remote add upstream https://github.com/robmllze/_view-foundation.git",
                "; git fetch upstream",
                "; git merge upstream/main --allow-unrelated-histories --no-edit"
            ],
            "options": {
                "cwd": "${workspaceFolder}/_view"
            }
        }
        
    ]
}