##.title
## ▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓
##
## X|Y|Z & Dev
##
## Copyright Ⓒ Robert Mollentze, xyzand.dev
##
## Licensing details can be found in the LICENSE file in the root directory.
##
## ▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓
##.title~

name: Prod Deploy

## -----------------------------------------------------------------------------

on:
  push:
    branches:
      - prod

## -----------------------------------------------------------------------------

env:
  FLUTTER_VERSION: 3.16.0

## -----------------------------------------------------------------------------

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: prod

    steps:

    #
    #
    #

    - uses: actions/checkout@v2
      with:
        submodules: recursive

    #
    #
    #

    - name: Notify Slack on Start
      run: |
        curl -X POST -H 'Content-type: application/json' \
        --data '{"text":"Starting PROD deployments..."}' \
        ${{ vars.SLACK_DEPLOYMENTS_WEBHOOK_URL }}
    
    #
    #
    #


    - name: Install Firebase CLI
      run: |
        npm install -g firebase-tools
    
    #
    #
    #

    - name: Setup Google Cloud Credentials
      env:
        PROD_FIREBASE_SERVICE_ACCOUNT: ${{ secrets.PROD_FIREBASE_SERVICE_ACCOUNT }}
      run: |
        mkdir -p firebase_prod  # Ensure the directory exists
        echo "$PROD_FIREBASE_SERVICE_ACCOUNT" > firebase_prod/google-credentials.json
        echo "GOOGLE_APPLICATION_CREDENTIALS=$(pwd)/firebase_prod/google-credentials.json" >> $GITHUB_ENV
    
    #
    #
    #

    - name: Clone Flutter from GitHub
      run: |
        git clone https:##github.com/flutter/flutter.git -b $FLUTTER_VERSION --depth 1
        echo "$GITHUB_WORKSPACE/flutter/bin" >> $GITHUB_PATH
    
    #
    #
    #

    - name: Fetch dependencies for _data
      run: flutter pub get
      working-directory: _data

    - name: Fetch dependencies for _services
      run: flutter pub get
      working-directory: _services
    
    - name: Fetch dependencies for _view
      run: flutter pub get
      working-directory: _view

    - name: Fetch dependencies for admin_app
      run: flutter pub get
      working-directory: admin_app

    - name: Fetch dependencies for public_app
      run: flutter pub get
      working-directory: public_app

    - name: Fetch dependencies for organization_app
      run: flutter pub get
      working-directory: organization_app

    #
    #
    #

    - name: Build and deploy public_app
      env:
        YOUR_PROD_FIREBASE_API_KEY: ${{ vars.YOUR_PROD_FIREBASE_API_KEY }}
      run: |
        dart .firebase_deployment_scripts/deploy_to_web_hosting_PROD/public_app@deploy_to_web_hosting_PROD.dart

    - name: Build and deploy admin_app
      env:
        YOUR_PROD_FIREBASE_API_KEY: ${{ vars.YOUR_PROD_FIREBASE_API_KEY }}
      run: |
        dart .firebase_deployment_scripts/deploy_to_web_hosting_PROD/admin_app@deploy_to_web_hosting_PROD.dart

    - name: Build and deploy organization_app
      env:
          YOUR_PROD_FIREBASE_API_KEY: ${{ vars.YOUR_PROD_FIREBASE_API_KEY }}
      run: |
        dart .firebase_deployment_scripts/deploy_to_web_hosting_PROD/organization_app@deploy_to_web_hosting_PROD.dart
    
    #
    #
    #

    - name: Notify Slack on Success
      if: success()
      run: |
        curl -X POST -H 'Content-type: application/json' \
        --data '{"text":"PROD deployments succeeded!"}' \
        ${{ vars.SLACK_DEPLOYMENTS_WEBHOOK_URL }}
    
    #
    #
    #

    - name: Notify Slack on Failure
      if: failure()
      run: |
        curl -X POST -H 'Content-type: application/json' \
        --data '{"text":":x: PROD deployments failed!"}' \
        ${{ vars.SLACK_DEPLOYMENTS_WEBHOOK_URL }}
