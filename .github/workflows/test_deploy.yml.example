##.title
## ▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓
##
## TEST DEPLOY
## 
## ▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓
##.title~

name: Test Deploy

## -----------------------------------------------------------------------------

on:
  push:
    branches:
      - test

## -----------------------------------------------------------------------------

env:
  FLUTTER_VERSION: 3.16.0

## -----------------------------------------------------------------------------

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: test

    steps:

    #
    #
    #

    - uses: actions/checkout@v2
      with:
        submodules: recursive

    #
    #
    #

    - name: Notify Slack on Start
      run: |
        curl -X POST -H 'Content-type: application/json' \
        --data '{"text":"Starting TEST deployments..."}' \
        ${{ vars.SLACK_DEPLOYMENTS_WEBHOOK_URL }}
    
    #
    #
    #


    - name: Install Firebase CLI
      run: |
        npm install -g firebase-tools
    
    #
    #
    #

    - name: Setup Google Cloud Credentials
      env:
        TEST_FIREBASE_SERVICE_ACCOUNT: ${{ secrets.TEST_FIREBASE_SERVICE_ACCOUNT }}
      run: |
        mkdir -p firebase_test  # Ensure the directory exists
        echo "$TEST_FIREBASE_SERVICE_ACCOUNT" > firebase_test/google-credentials.json
        echo "GOOGLE_APPLICATION_CREDENTIALS=$(pwd)/firebase_test/google-credentials.json" >> $GITHUB_ENV
    
    #
    #
    #

    - name: Clone Flutter from GitHub
      run: |
        git clone https://github.com/flutter/flutter.git -b $FLUTTER_VERSION --depth 1
        echo "$GITHUB_WORKSPACE/flutter/bin" >> $GITHUB_PATH
    
    #
    #
    #

    - name: Fetch dependencies for _data
      run: flutter pub get
      working-directory: _data

    - name: Fetch dependencies for _services
      run: flutter pub get
      working-directory: _services
    
    - name: Fetch dependencies for _view
      run: flutter pub get
      working-directory: _view

    - name: Fetch dependencies for admin_app
      run: flutter pub get
      working-directory: admin_app

    - name: Fetch dependencies for public_app
      run: flutter pub get
      working-directory: public_app

    - name: Fetch dependencies for organization_app
      run: flutter pub get
      working-directory: organization_app

    #
    #
    #

    - name: Build and deploy public_app
      env:
        YOUR_TEST_FIREBASE_API_KEY: ${{ vars.YOUR_TEST_FIREBASE_API_KEY }}
      run: |
        dart __scripts/deploy_to_web_hosting_TEST/public_app__deploy_to_web_hosting_TEST.dart

    - name: Build and deploy admin_app
      env:
        YOUR_TEST_FIREBASE_API_KEY: ${{ vars.YOUR_TEST_FIREBASE_API_KEY }}
      run: |
        dart __scripts/deploy_to_web_hosting_TEST/admin_app__deploy_to_web_hosting_TEST.dart

    - name: Build and deploy organization_app
      env:
          YOUR_TEST_FIREBASE_API_KEY: ${{ vars.YOUR_TEST_FIREBASE_API_KEY }}
      run: |
        dart __scripts/deploy_to_web_hosting_TEST/organization_app__deploy_to_web_hosting_TEST.dart
    
    #
    #
    #

    - name: Notify Slack on Success
      if: success()
      run: |
        curl -X POST -H 'Content-type: application/json' \
        --data '{"text":"TEST deployments succeeded!"}' \
        ${{ vars.SLACK_DEPLOYMENTS_WEBHOOK_URL }}
    
    #
    #
    #

    - name: Notify Slack on Failure
      if: failure()
      run: |
        curl -X POST -H 'Content-type: application/json' \
        --data '{"text":":x: TEST deployments failed!"}' \
        ${{ vars.SLACK_DEPLOYMENTS_WEBHOOK_URL }}
